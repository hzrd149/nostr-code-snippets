name: Build and Release

on:
  push:
    tags:
      - "v*" # Triggers on version tags like v1.0.0, v2.1.3, etc.

jobs:
  build:
    name: Build for ${{ matrix.platform }}
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        include:
          # Linux builds
          - os: ubuntu-latest
            platform: linux-x64
            target: linux-x64
          - os: ubuntu-latest
            platform: linux-arm64
            target: linux-arm64

          # macOS builds
          - os: macos-latest
            platform: darwin-x64
            target: darwin-x64
          - os: macos-latest
            platform: darwin-arm64
            target: darwin-arm64

          # Windows builds
          - os: windows-latest
            platform: windows-x64
            target: windows-x64

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      - name: Install dependencies
        run: bun install --frozen-lockfile

      - name: Build binary
        run: |
          bun build index.ts --compile --target=bun-${{ matrix.target }} --outfile=nostr-code-snippets-${{ matrix.platform }}${{ matrix.os == 'windows-latest' && '.exe' || '' }}

      - name: Create tarball (Unix)
        if: matrix.os != 'windows-latest'
        run: |
          tar -czf nostr-code-snippets-${{ matrix.platform }}.tar.gz nostr-code-snippets-${{ matrix.platform }}

      - name: Create zip (Windows)
        if: matrix.os == 'windows-latest'
        run: |
          7z a nostr-code-snippets-${{ matrix.platform }}.zip nostr-code-snippets-${{ matrix.platform }}.exe

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: nostr-code-snippets-${{ matrix.platform }}
          path: |
            nostr-code-snippets-${{ matrix.platform }}${{ matrix.os == 'windows-latest' && '.zip' || '.tar.gz' }}

  release:
    name: Create Release
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./artifacts

      - name: Display structure of downloaded files
        run: ls -R ./artifacts

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          draft: false
          prerelease: false
          generate_release_notes: true
          files: |
            ./artifacts/*/nostr-code-snippets-*.tar.gz
            ./artifacts/*/nostr-code-snippets-*.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
